services:

  simple_kafka_pipeline:
    build: ./simple_kafka_pipeline
    networks:
      - kafka-network
    volumes: 
      - simple_kafka_pipeline-logs:/root/.m2/repository/com/pipeline/kafka/simple_kafka_pipeline/1.0-SNAPSHOT

  data_generator:
    build: ./data_generator
    networks:
      - kafka-network
    ports:
      - "8888:8888"
    environment:
      JUPYTER_TOKEN: "docker"
    volumes:
      - data-generator-datasets:/project/datasets
    
  zookeeper:
    image: 'bitnami/zookeeper:3.8.2'
    ports: 
      - "2181:2181"
    networks: 
      - kafka-network
    environment: 
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes: 
      - zookeeper-logs:/bitnami/zookeeper

  kafka1:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    networks: 
      - kafka-network
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    volumes: 
      - kafka-logs1:/var/lib/kafka/data

  kafka2:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9093:9093"
      - "29093:29093"
    networks: 
      - kafka-network
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 2
    depends_on:
      - zookeeper
    volumes: 
      - kafka-logs2:/var/lib/kafka/data

  kafka3:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9094:9094"
      - "29094:29094"
    networks: 
      - kafka-network
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
    depends_on:
      - zookeeper
    volumes: 
      - kafka-logs3:/var/lib/kafka/data

  rbac:
    build: ./RBAC
    networks: 
      - kafka-network
    depends_on:
      kafka1:
        condition: service_started
      kafka2:
        condition: service_started
      kafka3:
        condition: service_started
      zookeeper:
        condition: service_started
    volumes: 
      - ./RBACdata/db/rbacdatabase.db:/var/lib/rbac/db/rbacdatabase.db
    stdin_open: true
    tty: true
    command: sh


  dash:
    build: ./data_anonymization_stream_handler
    networks:
      - kafka-network
    depends_on:
      kafka1:
        condition: service_started
      kafka2:
        condition: service_started
      kafka3:
        condition: service_started
      zookeeper:
        condition: service_started
      data_generator: 
        condition: service_completed_successfully
    volumes: 
      - ./dash_config/default_dash_config.json:/tmp/default_dash_config.json
      - ./dash_metrics/databases/:/tmp/metrics/

  kafka-connect:
    image: 'bitnami/kafka:3.5'
    ports:
      - "8079:8083"
    networks:
      - kafka-network
    depends_on:
      kafka1:
        condition: service_started
      kafka2:
        condition: service_started
      kafka3:
        condition: service_started
      zookeeper:
        condition: service_started
      simple_kafka_pipeline:
        condition: service_completed_successfully
      data_generator:
        condition: service_completed_successfully
    volumes:
      - ./kafka_connect_config/connect-standalone.properties:/opt/bitnami/kafka/config/connect-standalone.properties
      - ./kafka_connect_config/CSVSourceConnector.properties:/opt/bitnami/kafka/config/CSVSourceConnector.properties
      - ./kafka_connect_config/entrypoint.sh:/entrypoint.sh
      - simple_kafka_pipeline-logs:/custom-jars
      - data-generator-datasets:/data-generator-datasets
    command: /entrypoint.sh
  
networks: 
  kafka-network:
    driver: bridge

volumes:
  simple_kafka_pipeline-logs:
  data-generator-datasets:
  zookeeper-logs:
  kafka-logs1:
  kafka-logs2:
  kafka-logs3: