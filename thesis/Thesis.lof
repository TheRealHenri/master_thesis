\babel@toc {english}{}\relax 
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {1}{\ignorespaces Example of suppression of an attribute.}}{9}{figure.2.1}%
\contentsline {figure}{\numberline {2}{\ignorespaces Example of blurring of an attribute.}}{10}{figure.2.2}%
\contentsline {figure}{\numberline {3}{\ignorespaces Example of substitution of an attribute.}}{10}{figure.2.3}%
\contentsline {figure}{\numberline {4}{\ignorespaces Example of tokenization of an attribute.}}{11}{figure.2.4}%
\contentsline {figure}{\numberline {5}{\ignorespaces Example of the generalization of an attribute.}}{11}{figure.2.5}%
\contentsline {figure}{\numberline {6}{\ignorespaces Example of bucketizing of an attribute.}}{11}{figure.2.6}%
\contentsline {figure}{\numberline {7}{\ignorespaces Example of adding noise.}}{12}{figure.2.7}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {8}{\ignorespaces Hierarchy of masking functions}}{21}{figure.3.8}%
\contentsline {figure}{\numberline {9}{\ignorespaces Conditional substitution with a direct match condition taking the entire tuple into consideration.}}{22}{figure.3.9}%
\contentsline {figure}{\numberline {10}{\ignorespaces Substitution with a range condition on the basis of only a singular attribute in the tuple. }}{23}{figure.3.10}%
\contentsline {figure}{\numberline {11}{\ignorespaces Regular expression as a condition for the substitution as part of a tuple-based masking function. }}{23}{figure.3.11}%
\contentsline {figure}{\numberline {12}{\ignorespaces Aggregation operations on the "age" attribute.}}{25}{figure.3.12}%
\contentsline {figure}{\numberline {13}{\ignorespaces Arbitrary customer data where the values of the attribute "name" as well as "residency" are shuffled throughout the table. }}{28}{figure.3.13}%
\contentsline {figure}{\numberline {14}{\ignorespaces Generalization hierarchy for the attribute \textit {residency}. }}{31}{figure.3.14}%
\contentsline {figure}{\numberline {15}{\ignorespaces UML Component Diagram of the anonymization system for distributed event stores. }}{38}{figure.3.15}%
\contentsline {figure}{\numberline {16}{\ignorespaces UML Component Diagram of the component responsible for facilitating Role Based Access Control. Additionally, blue arrows have been added symbolizing data flowing. Dashed lines indicate simple response codes. }}{40}{figure.3.16}%
\contentsline {figure}{\numberline {17}{\ignorespaces UML Component Diagram of the anonymization system for distributed event stores. Additionally, blue arrows have been added symbolizing data flowing. Dashed lines indicate simple response codes. }}{41}{figure.3.17}%
\contentsline {figure}{\numberline {18}{\ignorespaces Architecture of a Distributed Event Store illustrated with a UML Component Diagram. }}{43}{figure.3.18}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {19}{\ignorespaces Apache Kafka Architecture and Terminology. The links between components have been enhanced with cardinalities to provide more context. }}{47}{figure.4.19}%
\contentsline {figure}{\numberline {20}{\ignorespaces Example Avro (left) and Kafka Struct (right) schemas for the patient use case.}}{58}{figure.4.20}%
\contentsline {figure}{\numberline {21}{\ignorespaces Class Diagram of the JSON Loader responsible for parser the Data Officer's requirements.}}{59}{figure.4.21}%
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {22}{\ignorespaces Full UML Component Diagram for the system as a whole.}}{69}{figure.6.22}%
\addvspace {10\p@ }
\providecommand \tocbasic@end@toc@file {}\tocbasic@end@toc@file 
